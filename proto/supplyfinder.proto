syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.supplyfinder";
option java_outer_classname = "SupplyFinderProto";
option objc_class_prefix = "SLF";

package supplyfinder;

service Finder {
  // Receive request from the client. Talk to supplier server 
  // and vendor server to fetch inventory information.
  // Return satisfying shops info with the lowest price.
  // If the food name doesn't exist, return nothing.
  rpc CheckFood (FinderRequest) returns (stream ShopInfo) {}
}

service Vendor {
  // A Finder initiate this request to check inventory.
  // returns inventoryinfo. Return price = -1 if out of stock.
  rpc CheckInventory (FoodID) returns (InventoryInfo) {}
}

service Supplier {
  // A Finder initiate this request.
  // Returns a stream of vendor info. Streaming loadbalaces servers
  // and potentially provides better data parallelism
  rpc CheckVendor (FoodID) returns (stream VendorInfo) {}
}

message FinderRequest {
  // A request from client to Finder.
  string food_name = 1;
  uint32 quantity = 2;
}

message FoodID {
  uint32 food_id = 1;
}

message VendorInfo {
  string url = 1;
  string name = 2;
  string location = 3;
}

message InventoryInfo {
  double price = 1;
  uint32 quantity = 2;
}

message ShopInfo {
  VendorInfo vendor = 1;
  InventoryInfo inventory = 2;
}
